version: '3.8'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - docker_swarm_public
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        # - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAINE}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        # - "traefik.http.routers.dashboard.service=api@internal"
        # - "traefik.http.routers.dashboard.middlewares=traefik-forward-auth"
        # Dummy service for Swarm port detection. The port can be any valid integer value.
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    secrets:
      - source: TRAEFIK_FORWARD_AUTH_PROVIDERS_GOOGLE
        target: /config
        mode: 0400
    environment:
      - CONFIG=/config
      - INSECURE_COOKIE=true # Example assumes no https, do not use in production
    networks:
      - docker_swarm_public
    deploy:
      labels:
        - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
        - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
        - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    networks:
      - docker_swarm_public
    deploy:
      labels:
      - "traefik.enable=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80" # it seems you always need to give traefik a port so it 'notices' the service  
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.middlewares=traefik-forward-auth"

networks:
  docker_swarm_public:
    external: true

secrets:
  TRAEFIK_FORWARD_AUTH_PROVIDERS_GOOGLE:
    external: true

# volumes:
#   letsencrypt: